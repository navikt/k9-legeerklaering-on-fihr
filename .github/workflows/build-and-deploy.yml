name: Build and deploy
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
    branches:

env:
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    secrets:
      READER_TOKEN: ${{ secrets.READER_TOKEN }}

  test:
    uses: ./.github/workflows/test.yml
    secrets:
      READER_TOKEN: ${{ secrets.READER_TOKEN }}

  docker:
    name: Build and push docker image
    if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/main') || github.event.deployment.payload.triggered # Build and push docker if branch is either main or dev-*
    runs-on: ubuntu-latest
    needs: [ lint, test ]
    permissions:
      packages: write
      contents: write
    env:
      NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
    outputs:
      TAG: ${{ steps.docker-tag.outputs.TAG }}
    steps:
      - name: Hente kode
        uses: actions/checkout@v4.2.2

      - name: Sette opp Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          registry-url: https://npm.pkg.github.com/
          scope: '@navikt'
          cache: 'npm'

      - name: Installere moduler
        run: npm ci

      - name: Login to docker
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.REPOSITORY_OWNER }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker-tag
        name: Sett tag for docker image
        run: |
          echo "TAG=$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "TAG=$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Bygge & laste opp Docker image
        run: |
          docker build --pull --tag ${DOCKER_IMAGE}:${TAG} --tag ${DOCKER_IMAGE}:latest .
          docker push ${DOCKER_IMAGE} --all-tags

      - name: Sett image for nais deploy
        run: echo "IMAGE=${DOCKER_IMAGE}:${TAG}" >> $GITHUB_ENV

  deploy-dev-gcp:
    permissions:
      id-token: write
      contents: write
    name: Deployer til dev-gcp
    if: startsWith(github.ref, 'refs/heads/dev-') || startsWith(github.ref, 'refs/heads/main') || github.event.deployment.payload.triggered # Build and push docker if branch is either main or dev-*
    runs-on: ubuntu-latest
    needs: [ docker ]
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Deploye til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/naiserator.yml
          VARS: nais/dev-gcp.json
          IMAGE: ${{ env.DOCKER_IMAGE }}:${{ needs.docker.outputs.TAG }}


#  deploy-prod-gcp:
#    name: Deploye til prod-gcp
#    if: startsWith(github.ref, 'refs/heads/main')  # If the branch is main
#    runs-on: ubuntu-latest
#    needs: [ docker ]
#    steps:
#      - uses: actions/checkout@v4.2.2
#      - name: Deploye til dev-gcp
#        uses: nais/deploy/actions/deploy@v2
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-gcp
#          RESOURCE: nais/naiserator.yml
#          VARS: nais/prod-gcp.json
#          IMAGE: ${{ env.DOCKER_IMAGE }}:${{ steps.docker-tag.outputs.TAG }}
